#include <bits/stdc++.h>
using namespace std;

int table[0x2008>>2];
int key[12];
int num[256];
char buf[256];

void load()
{
    uint8_t uVar1;
    uint32_t uVar2;
    uint64_t uVar3;
    uint8_t uVar4;
    
    uVar2 = 1;
    uVar3 = 1;
    do {
        uVar4 = (uint8_t)uVar3;
        uVar1 = uVar4 * 2 ^ uVar4;
        if ((char)uVar4 < '\0') {
            uVar1 = uVar1 ^ 0x1b;
        }
        uVar3 = (uint64_t)uVar1;
        uVar2 = uVar2 * 2 ^ uVar2;
        uVar2 = uVar2 ^ uVar2 * 4;
        uVar2 = uVar2 << 4 ^ uVar2;
        if ((char)uVar2 < '\0') {
            uVar2 = uVar2 ^ 9;
        }
        uVar4 = (uint8_t)uVar2;
        buf[uVar3] =
             (uVar4 << 1 | (char)uVar4 < '\0') ^ (uVar4 << 4 | uVar4 >> 4) ^ uVar4 ^ (uVar4 << 2 | uVar4 >> 6) ^
             (uVar4 << 3 | uVar4 >> 5) ^ 0x63;
    } while (uVar1 != 1);
    buf[0] = 0x63;
    return;
}

void validate()
{

    int x = table[(uint8_t)key[0]];
    for(int i=1; i<12; i++){
        if(x>=(0x2008>>2)||x<0) return;
        key[i] = table[x];
        x = table[x+1];
    }
    for(int i=0; i<12; i++){
        if(num[(uint8_t)key[i]]==0) return;
    }
    for(int i=0; i<12; i++){
        if(i==4||i==8) printf("-");
        printf("%c",num[(uint8_t)key[i]]);
    }
    printf("\n");
}

int main()
{
    FILE *fp = fopen("Installer","rb");
    fseek(fp, 0x3560, 0);
    fread(table, 1, 0x2008, fp);

    load();
    for(int i='A'; i<='Z'; i++)
        num[(uint8_t)buf[i]] = i;

    for(int i='A'; i<='Z'; i++){
        key[0] = buf[i];
        validate();
    }

    fclose(fp);
}